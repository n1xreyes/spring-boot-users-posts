image: maven:3.9-eclipse-temurin-17

stages:
  - build_test
  - package
  - dast_scan
  - docker_build_push
#  - deploy

variables:
  CI_REGISTRY_IMAGE: "registry.gitlab.com/n1xreyes/spring-boot-users-posts"
  DOCKER_IMAGE_TAG_SHA: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  DOCKER_IMAGE_TAG_LATEST: $CI_REGISTRY_IMAGE:latest
  # Maven variables
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository"
  JAR_FILE: target/*.jar

cache:
  key: "$CI_COMMIT_REF_SLUG-maven" # Cache per branch
  paths:
    - .m2/repository
    - target

build_and_test:
  stage: build_test
  script:
    - echo "--- Compiling and Running Tests ---"
    - mvn test
  artifacts:
    when: always
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml
    paths:
      - target/

# Job: Package the application into an executable JAR
package_app:
  stage: package
  script:
    - echo "--- Packaging Application ---"
    - mvn package -DskipTests
  artifacts:
    paths:
      - ${JAR_FILE}
    expire_in: 1 week

dast_scan:
  stage: dast_scan
  needs: ["package_app"]
#  image: veracode
  variables:
    APP_JAR: app.jar
  script:
    - echo "Starting DAST scan"
    - echo "Ending DAST scan"
  artifacts:
    reports:
      dast: dast-report.json

build_push_docker:
  stage: docker_build_push
  image: docker:latest
  services:
    - docker:dind
  needs: ["package_app"]
  before_script:
    - echo "Logging into GitLab Container Registry..."
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - echo "--- Building Docker Image ---"
    - ls -l target/
    - docker build -t "$DOCKER_IMAGE_TAG_SHA" -t "$DOCKER_IMAGE_TAG_LATEST" .
    - echo "Docker image built successfully:"
    - echo "  $DOCKER_IMAGE_TAG_SHA"
    - echo "  $DOCKER_IMAGE_TAG_LATEST"

    - echo "--- Pushing Docker Image to Registry ---"
    - docker push "$DOCKER_IMAGE_TAG_SHA"
    - docker push "$DOCKER_IMAGE_TAG_LATEST"
    - echo "Docker images pushed successfully."

# Job: Placeholder for Deployment to Kubernetes
#deploy_to_k8s_placeholder:
#  stage: deploy
#  image: alpine:latest
#  # This job needs the JAR artifact from the 'build_push_docker' job
#  needs: ["build_push_docker"]
#  script:
#    - echo "--- Deploying to Kubernetes ---"
#    - echo "This is a placeholder job. Actual deployment steps would go here."
#    - echo "Using image: $DOCKER_IMAGE_TAG_SHA"
#    - kubectl apply -f deployments.yaml
#    - kubectl apply -f service.yaml
#    - kubectl apply -f configmap.yaml
#  when: manual
#  environment:
#    name: staging
#    # url: Link to the deployed environment